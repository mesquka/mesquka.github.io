import{g as _,l as b}from"./leaflet-src-BYhlnZOh.js";import{I as Z}from"./iconify-M0qmFQ6P.js";import{d as z,e as J,j as W,o as C,c as g,b as c,h as S,t as d,u as A,a as Y,F as E,l as v,g as j,p as x,i as Q,_ as $}from"./index-BZSnMEcp.js";import{b as R}from"./route-block-B_A1xBdJ.js";const q=["Andorra","Andorran"],X=["United Arab Emirates","UAE","Emirati"],nn=["Afghanistan","Afghan"],an=["Antigua and Barbuda","Antiguan, Barbudan"],on=["Anguilla","Anguillian"],tn=["Albania","Albanian"],en=["Armenia","Armenian"],rn="Netherlands Antilles",sn=["Angola","Angolan"],cn=["Antarctica","Antarctican"],ln=["Argentina","Argentine"],un=["American Samoa","American Samoan"],dn=["Austria","Austrian"],mn=["Australia","Australian"],Cn=["Aruba","Aruban"],gn=["Åland Islands","Ålandish"],yn=["Azerbaijan","Azerbaijani"],Sn=["Bosnia and Herzegovina","Bosnian, Herzegovinian"],An=["Barbados","Barbadian"],Mn=["Bangladesh","Bangladeshi"],fn=["Belgium","Belgian"],hn=["Burkina Faso","Burkinabe"],bn=["Bulgaria","Bulgarian"],Tn=["Bahrain","Bahraini"],In=["Burundi","Burundian"],pn=["Benin","Beninese"],Gn=["Bermuda","Bermudian"],Nn=["Brunei Darussalam","Bruneian"],Bn=["Bolivia","Bolivian"],Un=["Brazil","Brazilian"],Pn=["Bahamas","Bahamian"],En=["Bhutan","Bhutanese"],vn="Bouvet Island",Rn=["Botswana","Motswana"],Ln=["Belarus","Belarusian"],Kn=["Belize","Belizean"],Fn=["Canada","Canadian"],kn=["Cocos (Keeling) Islands","Cocos Islander"],Dn=["Congo, The Democratic Republic of the"],On=["Central African Republic","Central African"],Hn=["Congo"],wn=["Switzerland","Swiss"],Vn=["Cote D'Ivoire","Ivorian"],_n=["Cook Islands","Cook Islander"],Zn=["Chile","Chilean"],zn=["Cameroon","Cameroonian"],Jn=["China","Chinese"],Wn=["Colombia","Colombian"],Yn=["Costa Rica","Costa Rican"],jn=["Cuba","Cuban"],xn=["Cape Verde","Cape Verdian"],Qn=["Christmas Island","Christmas Islander"],$n=["Cyprus","Cypriot"],qn=["Czechia","Czech Republic","Czech"],Xn=["Germany","German"],na=["Djibouti"],aa=["Denmark","Danish"],oa=["Dominica"],ta=["Dominican Republic"],ea=["Algeria","Algerian"],ra=["Ecuador","Ecuadorean"],sa=["Estonia","Estonian"],ia=["Egypt","Egyptian"],ca=["Western Sahara","Sahrawi"],la=["Eritrea","Eritrean"],ua=["Spain","Spanish"],da=["Ethiopia","Ethiopian"],ma="European Union",Ca=["Finland","Finnish"],ga=["Fiji","Fijian"],ya=["Falkland Islands (Malvinas)","Falkland Islander"],Sa=["Micronesia, Federated States of","Micronesian"],Aa=["Faroe Islands","Faroese"],Ma=["France","French"],fa=["Gabon","Gabonese"],ha=["United Kingdom","UK","British"],ba=["Grenada","Grenadian"],Ta=["Georgia","Georgian"],Ia=["French Guiana","Guianan"],pa=["Guernsey"],Ga=["Ghana","Ghanaian"],Na=["Gibraltar"],Ba=["Greenland","Greenlandic"],Ua=["Gambia","Gambian"],Pa=["Guinea","Guinean"],Ea=["Guadeloupe","Guadeloupian"],va=["Equatorial Guinea","Equatorial Guinean"],Ra=["Greece","Greek"],La=["South Georgia and the South Sandwich Islands","South Georgian South Sandwich Islander"],Ka=["Guatemala","Guatemalan"],Fa=["Guam","Guamanian"],ka=["Guinea-Bissau","Guinea-Bissauan"],Da=["Guyana","Guyanese"],Oa=["Hong Kong","Hong Konger"],Ha=["Heard Island and Mcdonald Islands","Heard and McDonald Islander"],wa=["Honduras","Honduran"],Va=["Croatia","Croatian"],_a=["Haiti","Haitian"],Za=["Hungary","Hungarian"],za=["Indonesia","Indonesian"],Ja=["Ireland","Irish"],Wa=["Israel","Israeli"],Ya=["Isle of Man","Manx"],ja=["India","Indian"],xa=["British Indian Ocean Territory"],Qa=["Iraq","Iraqi"],$a=["Iran, Islamic Republic Of","Iranian"],qa=["Iceland","Icelander"],Xa=["Italy","Italian"],no=["Jersey"],ao=["Jamaica","Jamaican"],oo=["Jordan","Jordanian"],to=["Japan","Japanese"],eo=["Kenya","Kenyan"],ro=["Kyrgyzstan","Kirghiz"],so=["Cambodia","Cambodian"],io=["Kiribati","I-Kiribati"],co=["Comoros","Comoran"],lo=["Saint Kitts and Nevis","Kittitian or Nevisian"],uo=["Korea, Democratic People's Republic of","North Korea","North Korean","DPRK"],mo=["Korea, Republic of","South Korea","South Korean"],Co=["Kuwait","Kuwaiti"],go=["Cayman Islands","Caymanian"],yo=["Kazakhstan","Kazakhstani"],So=["Lao People's Democratic Republic","Laotian"],Ao=["Lebanon","Lebanese"],Mo=["Saint Lucia","Saint Lucian"],fo=["Liechtenstein","Liechtensteiner"],ho=["Sri Lanka","Sri Lankan"],bo=["Liberia","Liberian"],To=["Lesotho","Mosotho"],Io=["Lithuania","Lithuanian"],po=["Luxembourg","Luxembourger"],Go=["Latvia","Latvian"],No=["Libyan Arab Jamahiriya","Libyan"],Bo=["Morocco","Moroccan"],Uo=["Monaco","Monegasque"],Po=["Moldova, Republic of","Moldovan"],Eo=["Montenegro","Montenegrin"],vo=["Madagascar","Malagasy"],Ro=["Marshall Islands","Marshallese"],Lo=["Republic of North Macedonia","North Macedonia","Macedonia, The Former Yugoslav Republic of","Macedonian"],Ko=["Mali","Malian"],Fo=["Myanmar","Burma","Burmese"],ko=["Mongolia","Mongolian"],Do=["Macao","Macau","Macanese"],Oo=["Northern Mariana Islands"],Ho=["Martinique"],wo=["Mauritania","Mauritanian"],Vo=["Montserrat","Montserratian"],_o=["Malta","Maltese"],Zo=["Mauritius","Mauritian"],zo=["Maldives","Maldivan"],Jo=["Malawi","Malawian"],Wo=["Mexico","Mexican"],Yo=["Malaysia","Malaysian"],jo=["Mozambique","Mozambican"],xo=["Namibia","Namibian"],Qo=["New Caledonia","New Caledonian"],$o=["Niger","Nigerien"],qo=["Norfolk Island","Norfolk Islander"],Xo=["Nigeria","Nigerian"],nt=["Nicaragua","Nicaraguan"],at=["Netherlands","Dutch"],ot=["Norway","Norwegian"],tt=["Nepal","Nepalese"],et=["Nauru","Nauruan"],rt=["Niue","Niuean"],st=["New Zealand","New Zealander"],it=["Oman","Omani"],ct=["Panama","Panamanian"],lt=["Peru","Peruvian"],ut=["French Polynesia","French Polynesian"],dt=["Papua New Guinea","Papua New Guinean"],mt=["Philippines","Filipino"],Ct=["Pakistan","Pakistani"],gt=["Poland","Polish"],yt=["Saint Pierre and Miquelon"],St=["Pitcairn","Pitcairn Islander"],At=["Puerto Rico","Puerto Rican"],Mt=["Palestinian Territory, Occupied","Palestine","Palestinian"],ft=["Portugal","Portuguese"],ht=["Palau","Palauan"],bt=["Paraguay","Paraguayan"],Tt=["Qatar","Qatari"],It=["Reunion"],pt=["Romania","Romanian"],Gt=["Serbia","Serbian"],Nt=["Russian Federation","Russian"],Bt=["Rwanda","Rwandan"],Ut=["Saudi Arabia","Saudi Arabian"],Pt=["Solomon Islands","Solomon Islander"],Et=["Seychelles","Seychellois"],vt=["Sudan","Sudanese"],Rt=["Sweden","Swedish"],Lt=["Singapore","Singaporean"],Kt=["Saint Helena","Saint Helenian"],Ft=["Slovenia","Slovene"],kt=["Svalbard and Jan Mayen"],Dt=["Slovakia","Slovak"],Ot=["Sierra Leone","Sierra Leonean"],Ht=["San Marino","Sammarinese"],wt=["Senegal","Senegalese"],Vt=["Somalia","Somali"],_t=["Suriname","Surinamer"],Zt=["Sao Tome and Principe","Sao Tomean"],zt=["El Salvador","Salvadoran"],Jt=["Syrian Arab Republic","Syrian"],Wt=["Swaziland","Swazi"],Yt=["Turks and Caicos Islands","Turks and Caicos Islander"],jt=["Chad","Chadian"],xt=["French Southern Territories"],Qt=["Togo","Togolese"],$t=["Thailand","Thai"],qt=["Tajikistan","Tadzhik"],Xt=["Tokelau","Tokelauan"],ne=["Timor-Leste","East Timorese"],ae=["Turkmenistan","Turkmen"],oe=["Tunisia","Tunisian"],te=["Tonga","Tongan"],ee=["Turkey","Turkish"],re=["Trinidad and Tobago","Trinidadian"],se=["Tuvalu","Tuvaluan"],ie=["Taiwan","Taiwanese"],ce=["Tanzania, United Republic of","Tanzanian"],le=["Ukraine","Ukrainian"],ue=["Uganda","Ugandan"],de=["United States Minor Outlying Islands"],me=["United States","USA","American"],Ce=["Uruguay","Uruguayan"],ge=["Uzbekistan","Uzbekistani"],ye=["Holy See (Vatican City State)","Vatican"],Se=["Saint Vincent and the Grenadines","Saint Vincentian"],Ae=["Venezuela","Venezuelan"],Me=["Virgin Islands, British"],fe=["Virgin Islands, U.S."],he=["Vietnam","Viet Nam","Vietnamese"],be=["Vanuatu","Ni-Vanuatu"],Te=["Wallis and Futuna","Wallis and Futuna Islander"],Ie=["Samoa","Samoan"],pe=["Kosovo","Kosovar"],Ge=["Yemen","Yemeni"],Ne=["Mayotte","Mahoran"],Be=["South Africa","South African"],Ue=["Zambia","Zambian"],Pe=["Zimbabwe","Zimbabwean"],Ee={AD:q,AE:X,AF:nn,AG:an,AI:on,AL:tn,AM:en,AN:rn,AO:sn,AQ:cn,AR:ln,AS:un,AT:dn,AU:mn,AW:Cn,AX:gn,AZ:yn,BA:Sn,BB:An,BD:Mn,BE:fn,BF:hn,BG:bn,BH:Tn,BI:In,BJ:pn,BM:Gn,BN:Nn,BO:Bn,BR:Un,BS:Pn,BT:En,BV:vn,BW:Rn,BY:Ln,BZ:Kn,CA:Fn,CC:kn,CD:Dn,CF:On,CG:Hn,CH:wn,CI:Vn,CK:_n,CL:Zn,CM:zn,CN:Jn,CO:Wn,CR:Yn,CU:jn,CV:xn,CX:Qn,CY:$n,CZ:qn,DE:Xn,DJ:na,DK:aa,DM:oa,DO:ta,DZ:ea,EC:ra,EE:sa,EG:ia,EH:ca,ER:la,ES:ua,ET:da,EU:ma,FI:Ca,FJ:ga,FK:ya,FM:Sa,FO:Aa,FR:Ma,GA:fa,GB:ha,GD:ba,GE:Ta,GF:Ia,GG:pa,GH:Ga,GI:Na,GL:Ba,GM:Ua,GN:Pa,GP:Ea,GQ:va,GR:Ra,GS:La,GT:Ka,GU:Fa,GW:ka,GY:Da,HK:Oa,HM:Ha,HN:wa,HR:Va,HT:_a,HU:Za,ID:za,IE:Ja,IL:Wa,IM:Ya,IN:ja,IO:xa,IQ:Qa,IR:$a,IS:qa,IT:Xa,JE:no,JM:ao,JO:oo,JP:to,KE:eo,KG:ro,KH:so,KI:io,KM:co,KN:lo,KP:uo,KR:mo,KW:Co,KY:go,KZ:yo,LA:So,LB:Ao,LC:Mo,LI:fo,LK:ho,LR:bo,LS:To,LT:Io,LU:po,LV:Go,LY:No,MA:Bo,MC:Uo,MD:Po,ME:Eo,MG:vo,MH:Ro,MK:Lo,ML:Ko,MM:Fo,MN:ko,MO:Do,MP:Oo,MQ:Ho,MR:wo,MS:Vo,MT:_o,MU:Zo,MV:zo,MW:Jo,MX:Wo,MY:Yo,MZ:jo,NA:xo,NC:Qo,NE:$o,NF:qo,NG:Xo,NI:nt,NL:at,NO:ot,NP:tt,NR:et,NU:rt,NZ:st,OM:it,PA:ct,PE:lt,PF:ut,PG:dt,PH:mt,PK:Ct,PL:gt,PM:yt,PN:St,PR:At,PS:Mt,PT:ft,PW:ht,PY:bt,QA:Tt,RE:It,RO:pt,RS:Gt,RU:Nt,RW:Bt,SA:Ut,SB:Pt,SC:Et,SD:vt,SE:Rt,SG:Lt,SH:Kt,SI:Ft,SJ:kt,SK:Dt,SL:Ot,SM:Ht,SN:wt,SO:Vt,SR:_t,ST:Zt,SV:zt,SY:Jt,SZ:Wt,TC:Yt,TD:jt,TF:xt,TG:Qt,TH:$t,TJ:qt,TK:Xt,TL:ne,TM:ae,TN:oe,TO:te,TR:ee,TT:re,TV:se,TW:ie,TZ:ce,UA:le,UG:ue,UM:de,US:me,UY:Ce,UZ:ge,VA:ye,VC:Se,VE:Ae,VG:Me,VI:fe,VN:he,VU:be,WF:Te,WS:Ie,XK:pe,YE:Ge,YT:Ne,ZA:Be,ZM:Ue,ZW:Pe};function T(n){return Le(n)||Re(n)||K(n)||ve()}function ve(){throw new TypeError(`Invalid attempt to spread non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`)}function Re(n){if(typeof Symbol<"u"&&Symbol.iterator in Object(n))return Array.from(n)}function Le(n){if(Array.isArray(n))return I(n)}function L(n,o){var a;if(typeof Symbol>"u"||n[Symbol.iterator]==null){if(Array.isArray(n)||(a=K(n))||o&&n&&typeof n.length=="number"){a&&(n=a);var r=0,l=function(){};return{s:l,n:function(){return r>=n.length?{done:!0}:{done:!1,value:n[r++]}},e:function(i){throw i},f:l}}throw new TypeError(`Invalid attempt to iterate non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`)}var m=!0,t=!1,s;return{s:function(){a=n[Symbol.iterator]()},n:function(){var i=a.next();return m=i.done,i},e:function(i){t=!0,s=i},f:function(){try{!m&&a.return!=null&&a.return()}finally{if(t)throw s}}}}function K(n,o){if(n){if(typeof n=="string")return I(n,o);var a=Object.prototype.toString.call(n).slice(8,-1);if(a==="Object"&&n.constructor&&(a=n.constructor.name),a==="Map"||a==="Set")return Array.from(n);if(a==="Arguments"||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(a))return I(n,o)}}function I(n,o){(o==null||o>n.length)&&(o=n.length);for(var a=0,r=new Array(o);a<o;a++)r[a]=n[a];return r}var u=Ee,p=127397,f=/^[a-z]{2}$/i,F=/^.{2,}$/,G=/\uD83C[\uDDE6-\uDDFF]/;function k(n,o){if(o=o.toLowerCase(),o.includes(n)||n.includes(o))return!0;if(o.includes(",")){var a=o.split(", ").reverse().join(" ");if(a.includes(n)||n.includes(a))return!0}return!1}function N(n){return n=n.toUpperCase(),u[n]?n:void 0}function B(n){if(!(!n||!F.test(n))){n=n.trim().toLowerCase();for(var o in u)if({}.hasOwnProperty.call(u,o)){var a=u[o];Array.isArray(a)||(a=[a]);var r=L(a),l;try{for(r.s();!(l=r.n()).done;){var m=l.value;if(m.toLowerCase()===n)return o}}catch(s){r.e(s)}finally{r.f()}}var t=Object.keys(u).filter(function(s){var e=u[s];Array.isArray(e)||(e=[e]);var i=L(e),P;try{for(i.s();!(P=i.n()).done;){var w=P.value;if(k(n,w))return!0}}catch(V){i.e(V)}finally{i.f()}return!1});if(t.length===1)return t[0]}}function D(n){if(!(!n||!f.test(n))){var o=u[n.toUpperCase()];return Array.isArray(o)?o[0]:o}}function O(n){if(!(!n||!f.test(n))&&(n=N(n),!!n&&String&&String.fromCodePoint))return String.fromCodePoint.apply(String,T(T(n).map(function(o){return p+o.charCodeAt(0)})))}function U(n){if(!(!n||!G.test(n)))return N(T(n).map(function(o){return o.codePointAt(0)-p}).map(function(o){return String.fromCharCode(o)}).join(""))}function Ke(n){return U(n)||B(n)}function Fe(n){return(!f.test(n)||n==="UK")&&(n=B(n)),O(n)}function ke(n){return G.test(n)&&(n=U(n)),D(n)}var De={MAGIC_NUMBER:p,CODE_RE:f,NAME_RE:F,FLAG_RE:G,code:Ke,flag:Fe,name:ke,countries:u,isCode:N,fuzzyCompare:k,codeToName:D,codeToFlag:O,nameToCode:B,flagToCode:U},h=De,Oe=h.flag,He=h.name,we=h.code,Ve=h.countries,_e={flag:Oe,name:He,code:we,countries:Ve};const M=_(_e),Ze=[{name:"Honolulu",lat:21.3069444,lng:-157.8583333,countryCode:"US"},{name:"Vancouver",lat:49.2827291,lng:-123.1207375,countryCode:"CA"},{name:"San Francisco",lat:37.7749295,lng:-122.4194155,countryCode:"US"},{name:"Seattle",lat:47.6062095,lng:-122.3320708,countryCode:"US"},{name:"San Jose",lat:37.3382082,lng:-121.8863286,countryCode:"US"},{name:"Las Vegas",lat:36.1699412,lng:-115.1398296,countryCode:"US"},{name:"Breckenridge",lat:39.4816537,lng:-106.0383518,countryCode:"US"},{name:"Denver",lat:39.7392358,lng:-104.9890417,countryCode:"US"},{name:"Austin",lat:30.2671531,lng:-97.7430608,countryCode:"US"},{name:"Chicago",lat:41.8839246,lng:-87.6281888,countryCode:"US"},{name:"Columbus",lat:39.9623636,lng:-82.9978509,countryCode:"US"},{name:"Hancock",lat:39.7000024,lng:-78.1863789,countryCode:"US"},{name:"Hagerstown",lat:39.6417629,lng:-77.7199932,countryCode:"US"},{name:"Washington",lat:38.9071923,lng:-77.0368707,countryCode:"US"},{name:"Scranton",lat:41.4077035,lng:-75.6652827,countryCode:"US"},{name:"Jersey City",lat:40.7176484,lng:-74.0416072,countryCode:"US"},{name:"New York",lat:40.7127753,lng:-74.0059728,countryCode:"US"},{name:"Montreal",lat:45.5016889,lng:-73.5674448,countryCode:"CA"},{name:"Boston",lat:42.3584685,lng:-71.0567092,countryCode:"US"},{name:"Dover",lat:43.1978624,lng:-70.8736698,countryCode:"US"},{name:"Portsmouth",lat:43.0717552,lng:-70.7625532,countryCode:"US"},{name:"Reykjavík",lat:64.1466006,lng:-21.9426354,countryCode:"IS"},{name:"Cascais",lat:38.6970899,lng:-9.4205362,countryCode:"PT"},{name:"Lisbon",lat:38.7110961,lng:-9.1374326,countryCode:"PT"},{name:"Fátima",lat:39.6292088,lng:-8.6761446,countryCode:"PT"},{name:"Madrid",lat:40.4167411,lng:-3.7031313,countryCode:"ES"},{name:"Barcelona",lat:41.3873974,lng:2.1687483,countryCode:"ES"},{name:"Granollers",lat:41.6061927,lng:2.2870889,countryCode:"ES"},{name:"Paris",lat:48.8566141,lng:2.3522219,countryCode:"FR"},{name:"Amsterdam",lat:52.3666969,lng:4.8945397,countryCode:"NL"},{name:"Arnhem",lat:51.9851034,lng:5.8987296,countryCode:"NL"},{name:"Pietra Ligure",lat:44.1502851,lng:8.2834523,countryCode:"IT"},{name:"Borgio Verezzi",lat:44.1597284,lng:8.3074754,countryCode:"IT"},{name:"Orta San Giulio",lat:45.7985151,lng:8.4098731,countryCode:"IT"},{name:"Arona",lat:45.7579134,lng:8.5603498,countryCode:"IT"},{name:"Alessandria",lat:44.9072727,lng:8.6116796,countryCode:"IT"},{name:"Frankfurt",lat:50.1103403,lng:8.6820444,countryCode:"DE"},{name:"Gallarate",lat:45.6598994,lng:8.7929458,countryCode:"IT"},{name:"Milan",lat:45.4642035,lng:9.1899819,countryCode:"IT"},{name:"Oslo",lat:59.9138688,lng:10.7522454,countryCode:"NO"},{name:"Certaldo",lat:43.5478152,lng:11.0397318,countryCode:"IT"},{name:"Florence",lat:43.7731287,lng:11.2553629,countryCode:"IT"},{name:"Gothenburg",lat:57.7085964,lng:11.9745308,countryCode:"SE"},{name:"Orvieto",lat:42.7184778,lng:12.1107613,countryCode:"IT"},{name:"Rome",lat:41.9026896,lng:12.4962271,countryCode:"IT"},{name:"Berlin",lat:52.5202595,lng:13.4055861,countryCode:"DE"},{name:"Prague",lat:50.0755381,lng:14.4378005,countryCode:"CZ"},{name:"Ostrava",lat:49.8209226,lng:18.2625243,countryCode:"CZ"},{name:"Athens",lat:37.9761869,lng:23.7259151,countryCode:"GR"},{name:"Helsinki",lat:60.1698557,lng:24.9383791,countryCode:"FI"},{name:"Bran",lat:45.5167139,lng:25.3672244,countryCode:"RO"},{name:"Bucharest",lat:44.4280279,lng:26.1025932,countryCode:"RO"},{name:"İstanbul",lat:41.0106422,lng:28.9685132,countryCode:"TR"},{name:"Saint Petersburg",lat:59.9310584,lng:30.3609096,countryCode:"RU"},{name:"Dubai",lat:25.2048493,lng:55.2707828,countryCode:"AE"},{name:"Alibag",lat:18.6583989,lng:72.8773346,countryCode:"IN"},{name:"Mumbai",lat:19.0759837,lng:72.8776559,countryCode:"IN"},{name:"Calangute",lat:15.5365726,lng:73.7642463,countryCode:"IN"},{name:"Candolim",lat:15.5128531,lng:73.7689331,countryCode:"IN"},{name:"Mapusa",lat:15.5937116,lng:73.8142237,countryCode:"IN"},{name:"Panaji",lat:15.4909301,lng:73.8278496,countryCode:"IN"},{name:"Aldona",lat:15.5897544,lng:73.8731646,countryCode:"IN"},{name:"Velha Goa",lat:15.5011956,lng:73.9135051,countryCode:"IN"},{name:"Bangkok",lat:13.7563309,lng:100.5017651,countryCode:"TH"},{name:"Singapore",lat:1.2857431,lng:103.8530179,countryCode:"SG"},{name:"Shenzhen",lat:22.5390945,lng:114.0494382,countryCode:"CN"},{name:"Kalbarri",lat:-27.7104192,lng:114.1646201,countryCode:"AU"},{name:"Margaret River",lat:-33.9610465,lng:115.0767388,countryCode:"AU"},{name:"Dunsborough",lat:-33.6081798,lng:115.1065938,countryCode:"AU"},{name:"Augusta",lat:-34.3160497,lng:115.1596985,countryCode:"AU"},{name:"Denpasar",lat:-8.6704582,lng:115.2126293,countryCode:"ID"},{name:"Busselton",lat:-33.6554927,lng:115.3500188,countryCode:"AU"},{name:"Bunbury",lat:-33.3256361,lng:115.6396494,countryCode:"AU"},{name:"Perth",lat:-31.9505269,lng:115.8604572,countryCode:"AU"},{name:"Pemberton",lat:-34.4432694,lng:116.0369383,countryCode:"AU"},{name:"New Norcia",lat:-30.9710786,lng:116.2145948,countryCode:"AU"},{name:"Northam",lat:-31.6478698,lng:116.6742108,countryCode:"AU"},{name:"Denmark",lat:-34.9617565,lng:117.3506511,countryCode:"AU"},{name:"Taoyuan",lat:24.9936281,lng:121.3009798,countryCode:"TW"},{name:"Taipei",lat:25.0329694,lng:121.5654177,countryCode:"TW"},{name:"Kobe",lat:34.6927886,lng:135.1933195,countryCode:"JP"},{name:"Osaka",lat:34.6685274,lng:135.4987078,countryCode:"JP"},{name:"Kyoto",lat:35.0099086,lng:135.7679618,countryCode:"JP"},{name:"Adelaide",lat:-34.9284989,lng:138.6007456,countryCode:"AU"},{name:"Tokyo",lat:35.6813581,lng:139.7677529,countryCode:"JP"},{name:"Melbourne",lat:-37.8136276,lng:144.9630576,countryCode:"AU"},{name:"Cairns",lat:-16.9203476,lng:145.7709529,countryCode:"AU"},{name:"Canberra",lat:-35.2810943,lng:149.1288345,countryCode:"AU"},{name:"Queanbeyan",lat:-35.3530392,lng:149.2334131,countryCode:"AU"},{name:"Goulburn",lat:-34.7479181,lng:149.7277447,countryCode:"AU"},{name:"Braidwood",lat:-35.4460326,lng:149.7990648,countryCode:"AU"},{name:"Batemans Bay",lat:-35.7162239,lng:150.1794602,countryCode:"AU"},{name:"Bowral",lat:-34.4801725,lng:150.4174758,countryCode:"AU"},{name:"Sydney",lat:-33.8688197,lng:151.2092955,countryCode:"AU"},{name:"Brisbane",lat:-27.4689749,lng:153.0260734,countryCode:"AU"},{name:"Queenstown",lat:-45.0311622,lng:168.6626435,countryCode:"NZ"},{name:"Christchurch",lat:-43.5320544,lng:172.6362254,countryCode:"NZ"},{name:"Auckland",lat:-36.8484597,lng:174.7633315,countryCode:"NZ"},{name:"Coromandel",lat:-36.7594168,lng:175.4974034,countryCode:"NZ"},{name:"Taupō",lat:-38.6902716,lng:176.0823161,countryCode:"NZ"},{name:"Rotorua",lat:-38.1368478,lng:176.2497461,countryCode:"NZ"}],y=n=>(x("data-v-56d670db"),n=n(),Q(),n),ze={class:"content"},Je=y(()=>c("div",{class:"map",id:"map"},null,-1)),We=y(()=>c("br",null,null,-1)),Ye=y(()=>c("br",null,null,-1)),je={key:0,class:"details"},xe={class:"grid title-bar"},Qe=y(()=>c("div",{class:"grid-item title"},"Cities by Country",-1)),$e={class:"table-container"},qe=y(()=>c("br",null,null,-1)),H=z({__name:"index",setup(n){const o=Ze.map(t=>({...t,countryFlag:M.flag(t.countryCode),country:M.name(t.countryCode)})).sort((t,s)=>t.name>s.name?1:-1),a={};o.forEach(t=>{a[t.country]||(a[t.country]=[]),a[t.country].push(t)});let r;const l=J(!1);function m(){r=b.map("map",{center:[40,0],zoom:2,maxBounds:[[-200,-200],[200,200]]}),r.attributionControl.setPrefix('&copy; <a href="http://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors'),r.attributionControl.addAttribution('&copy; <a href= "http://cartodb.com/attributions#basemaps">CartoDB</a>'),b.tileLayer("https://{s}.basemaps.cartocdn.com/dark_all/{z}/{x}/{y}.png",{tileSize:128,zoomOffset:1}).addTo(r),o.forEach(t=>{b.circleMarker([t.lat,t.lng],{radius:4,color:"#ffbe85",className:"leaflet-map-marker"}).bindPopup(`${t.name}, ${t.country} ${t.countryFlag}`).on("mouseover",function(){this.openPopup()}).on("mouseout",function(){this.closePopup()}).addTo(r)})}return W(()=>{m()}),(t,s)=>(C(),g("div",ze,[Je,c("div",{class:"counts",onClick:s[0]||(s[0]=e=>l.value=!0)},[S(d(A(o).length)+" Cities/Towns",1),We,S(" "+d(Object.keys(a).length)+" Countries",1),Ye,S(" "+d(Object.keys(a).sort().map(A(M).flag).join("")),1)]),l.value?(C(),g("div",je,[c("div",xe,[Qe,c("div",{class:"clear-button grid-item-fixed button",onClick:s[1]||(s[1]=e=>l.value=!1)},[Y(A(Z),{class:"icon",icon:"ic:close"})])]),c("div",$e,[c("table",null,[(C(!0),g(E,null,v(Object.keys(a).sort(),e=>(C(),g("tr",{key:e},[c("td",null,d(e)+" "+d(A(M).flag(e))+" ("+d(a[e].length)+") ",1),c("td",null,[(C(!0),g(E,null,v(a[e],i=>(C(),g("span",{key:i.name},[S(d(i.name),1),qe]))),128))])]))),128))])])])):j("",!0)]))}});typeof R=="function"&&R(H);const tr=$(H,[["__scopeId","data-v-56d670db"]]);export{tr as default};
